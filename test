const addButton = document.querySelector('.add-recipe');
const modal = document.getElementById('recipeModal');
const recipeForm = document.getElementById('recipeForm');

addButton.addEventListener('click', () => {
    const recipeModal = document.getElementById('recipeModal');
    recipeModal.classList.add('show');
    recipeModal.style.display = 'block';
    recipeModal.setAttribute('aria-hidden', 'false');
    document.body.classList.add('modal-open');
    });

const breakfast = document.getElementById('breakfast');
const lunch = document.getElementById('lunch');
const dinner = document.getElementById('dinner');
const sweets = document.getElementById('sweets');

recipeForm.addEventListener('submit', (event) => {
    console.log('click');
event.preventDefault();

const recipeName = document.getElementById('recipeName').value;
const ingredients = document.getElementById('ingredients').value;
const instructions = document.getElementById ('instructions').value;
const category = document.getElementById('recipeCategory').value;

const newRecipe = {
    name: recipeName,
    ingredients: ingredientsUsed,
    instructions: instructionsUsed,
    category: recipeCategory,
}
const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];
storedRecipes.push(newRecipe);
localStorage.setItem('recipes', JSON.stringify(storedRecipes));

renderRecipeCard(recipeName, ingredientsUsed, recipeCategory)
recipeForm.reset();

   // close the modal
   modal.classList.remove('show');
   modal.style.display = 'none';
   modal.setAttribute('aria-hidden', 'true');
   document.body.classList.remove('modal-open');
});
    
    const renderRecipeCard = (recipe) =>{
        const recipeCard = document.createElement('div');
        recipeCard.classList.add('card', "mb-3", 'shadow-sm')

     const ingredientsList = ingredients.split(',').map(ingredient => `<li>${ingredient.trim()}</li>`).join('');
    };


// // Alyssa added bellow
// document.getElementById('submitButton').addEventListener('click', function() {
//     // Get the values from the form
//     const recipeName = document.getElementById('recipeName').value;
//     const ingredients = document.getElementById('ingredients').value;
//     const instructions = document.getElementById('instructions').value;
//     const category = document.getElementById('recipeCategory').value.trim();
//     // Update the card with the recipe details
//     document.getElementById('cardRecipeName').innerText = recipeName;
//     document.getElementById('cardIngredients').innerText = ingredients;
//     document.getElementById('cardInstruct').innerText = instructions;
    // alyssa added 12.16 234
    const recipeCard = document.createElement('div');
    recipeCard.classList.add('card', 'mb-3', 'shadow-sm');
    recipeCard.style.width = '500px'; // Sets card width
    recipeCard.style.height = 'auto'; // Keep height dynamic
    recipeCard.style.padding = '20px';
    recipeCard.style.border = '1px solid #ccc';
    recipeCard.style.borderRadius = '20px';
    recipeCard.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
    recipeCard.style.margin = '10px';
    recipeCard.style.backgroundImage = 'url(https://cdn.onlinefabricstore.com/products/GINCHPIN1-4-60_1.jpg)'
    recipeCard.style.backgroundSize = '200px 200px';
    recipeCard.style.backgroundRepeat = 'repeat';
    const ingredientsList = ingredients.split(',').map(ingredient => `<li>${ingredient.trim()}</li>`).join('');
    
    recipeCard.innerHTML = `
        <div class="card-body">
            <h5 class="card-title"><strong>${recipeName}</strong></h5>
            <p class="card-text">Ingredients:</p>
            <ul>${ingredientsList}</ul>
            <p>Instructions:</p>
            <p>${instructions}</p>
        </div>
    `;
   
    const categoryContainer = getCategoryContainer(recipe.category);
    categoryContainer.appendChild(recipeCard);
};

const getCategoryContainer = (category) => {
    switch (category.toLowerCase()) {
        case 'breakfast':
            return document.getElementById('breakfast');
        case 'lunch':
            return document.getElementById('lunch');
        case 'dinner':
            return document.getElementById('dinner');
        case 'sweets':
            return document.getElementById('sweets');
        default:
            return document.getElementById('breakfast'); // Default category
    }
};

const loadRecipes = () => {
    const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];
    storedRecipes.forEach((recipe) => {
        renderRecipeCard(recipe);
    });
};

window.addEventListener('DOMContentLoaded', loadRecipes);









// original:
// // // Add an Add button to add
// const addButton = document.querySelector('.add-recipe');
// const modal = document.getElementById('recipeModal');
// const recipeForm = document.getElementById('recipeForm');
// const submitButton = document.getElementById('submitButton');
// const closeButton = document.getElementById('closeButton');
// const breakfast = document.getElementById('breakfast');
// const lunch = document.getElementById('lunch');
// const dinner = document.getElementById('dinner');
// const sweets = document.getElementById('sweets');

// addButton.addEventListener('click', () => {
//     const recipeModal = document.getElementById('recipeModal');
//     recipeModal.classList.add('show');
//     recipeModal.style.display = 'block';
//     recipeModal.setAttribute('aria-hidden', 'false');
//     document.body.classList.add('modal-open');
// });

// closeButton.addEventListener('click', () => {
//     modal.classList.remove('show');
//     modal.style.display = 'none';
//     modal.setAttribute('aria-hidden', 'true');
//     document.body.classList.remove('modal-open');
// });

// recipeForm.addEventListener('submit', (event) => {
//     event.preventDefault();


//     // Create the Recipe card and the categories  
//     const recipeName = document.getElementById('recipeName').value;
//     const ingredients = document.getElementById('ingredients').value;
//     const instructions = document.getElementById('instructions').value;
//     const category = document.getElementById('cardCategory').value;

//     // creates the recipe object 
//     const newRecipe = {
//         name: recipeName,
//         ingredients: ingredients,
//         instructions: instructions,
//         category: category,
//     };

//     // get stored recipes from localstorage and push the new one
//     const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];
//     storedRecipes.push(newRecipe);
//     localStorage.setItem('recipes', JSON.stringify(storedRecipes));

//     // Render the new recipe card
//     renderRecipeCard(newRecipe);

//     // reset the form inputs
//     recipeForm.reset();

//     // close the modal
//     modal.classList.remove('show');
//     modal.style.display = 'none';
//     modal.setAttribute('aria-hidden', 'true');
//     document.body.classList.remove('modal-open');
// });

// // alyssa added 12.16 234
//     const recipeCard = document.createElement('div');
//         recipeCard.classList.add('card', 'mb-3', 'shadow-sm');
//         recipeCard.style.width = '500px'; // Sets card width
//         recipeCard.style.height = 'auto'; // Keep height dynamic
//         recipeCard.style.padding = '20px';
//         recipeCard.style.border = '1px solid #ccc';
//         recipeCard.style.borderRadius = '20px';
//         recipeCard.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
//         recipeCard.style.margin = '10px';
//         recipeCard.style.backgroundImage = 'url(https://cdn.onlinefabricstore.com/products/GINCHPIN1-4-60_1.jpg)'
//         recipeCard.style.backgroundSize = '200px 200px';
//         recipeCard.style.backgroundRepeat = 'repeat';



// // render the recipe card in the recipe container 
// const renderRecipeCard = (recipe) => {
//     const recipeCard = document.createElement('div');
//     recipeCard.classList.add('card', 'mb-3', 'shadow-sm')

//      // Format ingredients as a list
// const ingredientsList = recipe.ingredients
//      .map(ingredient => `<li>${ingredient}</li>`)
//      .join('');

//     recipeCard.innerHTML = `
//     <div class="card-body">
//     <h5 class="card-title"><strong>${recipeName}</strong></h5>
//     <p class="card-text">Ingredients:</p>
//     <ul>${ingredients}</ul>
//     <p>Instructions:</p>
//     <p>${instructions}</p>
//     </div>
//     `;

//     // Append the recipe card to the appropriate category
//     const categoryContainer = getCategoryContainer(recipe.category);
//     categoryContainer.appendChild(recipeCard);
// };

// // Get the appropriate category container
// const getCategoryContainer = (category) => {
//     switch (category.toLowerCase()) {
//         case 'breakfast':
//             return document.querySelector('#breakfast .row');
//         case 'lunch':
//             return document.querySelector('#lunch .row');
//         case 'dinner':
//             return document.querySelector('#dinner .row');
//         case 'sweets':
//             return document.querySelector('#sweets .row');
//         default:
//             return document.querySelector('#breakfast .row'); // Default category
//     }
// };

// const loadRecipes = () => {
//     const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];
//     storedRecipes.forEach((recipe) => {
//         renderRecipeCard(recipe)
//     });
// };

// window.addEventListener('DOMContentLoaded', loadRecipes);

